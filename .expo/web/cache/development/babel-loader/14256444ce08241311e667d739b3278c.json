{"ast":null,"code":"import Button from \"../components/Button\";\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Card } from 'react-native-paper';\nimport WorkoutCard from \"./WorkoutCard\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Macrodetails(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      title = _route$params.title,\n      workout = _route$params.workout;\n  console.log(\"navigation from workout is \" + navigation);\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    cardbox: {\n      margin: 10\n    },\n    scrollView: {\n      marginHorizontal: 10,\n      display: 'flex',\n      flex: 1,\n      flexWrap: 'wrap',\n      flexShrink: 1\n    },\n    text: {\n      flex: 1,\n      flexWrap: 'wrap'\n    },\n    titleText: {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  });\n  var exercises = workout.results;\n  var choices = [];\n  var chosen = [];\n\n  for (var i = 0; i < 5; i++) {\n    var number = Math.floor(Math.random() * exercises.length);\n    if (choices.includes(number)) i--;else {\n      choices[i] = number;\n      chosen[i] = workout.results[number];\n    }\n  }\n\n  console.log(chosen);\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.text\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView\n  }, React.createElement(Text, {\n    style: styles.titleText\n  }, \"Workouts for today is: \", title), chosen.map(function (item) {\n    return React.createElement(ScrollView, {\n      style: styles.scrollView,\n      key: item.id\n    }, React.createElement(WorkoutCard, {\n      data: item,\n      navigation: navigation,\n      id: item.id\n    }));\n  }))));\n}","map":{"version":3,"sources":["/Users/manav/Documents/study/Fall 2021 Queens College/CSCI 370 /git-repo/screens/Workout.js"],"names":["Button","React","useState","useEffect","Card","WorkoutCard","AsyncStorage","Macrodetails","route","navigation","params","title","workout","console","log","styles","StyleSheet","create","container","flex","cardbox","margin","scrollView","marginHorizontal","display","flexWrap","flexShrink","text","titleText","fontSize","fontWeight","exercises","results","choices","chosen","i","number","Math","floor","random","length","includes","map","item","id"],"mappings":"AAAA,OAAOA,MAAP;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;;;AAEA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,eAAe,SAASC,YAAT,OAAyC;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAZC,UAAY,QAAZA,UAAY;AACtD,sBAA2BD,KAAK,CAACE,MAAjC;AAAA,MAAQC,KAAR,iBAAQA,KAAR;AAAA,MAAeC,OAAf,iBAAeA,OAAf;AACEC,EAAAA,OAAO,CAACC,GAAR,iCAA0CL,UAA1C;AACF,MAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG,KADoB;AAI/BC,IAAAA,OAAO,EAAC;AACNC,MAAAA,MAAM,EAAE;AADF,KAJuB;AAO/BC,IAAAA,UAAU,EAAE;AACVC,MAAAA,gBAAgB,EAAE,EADR;AAEVC,MAAAA,OAAO,EAAE,MAFC;AAGVL,MAAAA,IAAI,EAAE,CAHI;AAIVM,MAAAA,QAAQ,EAAE,MAJA;AAKVC,MAAAA,UAAU,EAAE;AALF,KAPmB;AAc/BC,IAAAA,IAAI,EAAE;AACJR,MAAAA,IAAI,EAAE,CADF;AAEJM,MAAAA,QAAQ,EAAE;AAFN,KAdyB;AAkB/BG,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL;AAlBoB,GAAlB,CAAf;AAwBA,MAAIC,SAAS,GAAGnB,OAAO,CAACoB,OAAxB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA4B;AAC1B,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,SAAS,CAACS,MAArC,CAAb;AACA,QAAGP,OAAO,CAACQ,QAAR,CAAiBL,MAAjB,CAAH,EAA6BD,CAAC,GAA9B,KACK;AACLF,MAAAA,OAAO,CAACE,CAAD,CAAP,GAAaC,MAAb;AACAF,MAAAA,MAAM,CAACC,CAAD,CAAN,GAAYvB,OAAO,CAACoB,OAAR,CAAgBI,MAAhB,CAAZ;AACC;AACF;;AAEDvB,EAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAZ;AAEE,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEnB,MAAM,CAACG;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACY;AAApB,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEZ,MAAM,CAACO;AAA1B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACa;AAApB,gCAAuDjB,KAAvD,CADJ,EAEKuB,MAAM,CAACQ,GAAP,CAAW,UAACC,IAAD,EAAU;AAClB,WACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE5B,MAAM,CAACO,UAA1B;AAAsC,MAAA,GAAG,EAAEqB,IAAI,CAACC;AAAhD,OACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAED,IAAnB;AAAyB,MAAA,UAAU,EAAElC,UAArC;AAAiD,MAAA,EAAE,EAAEkC,IAAI,CAACC;AAA1D,MADJ,CADJ;AAKH,GANA,CAFL,CADJ,CADJ,CADJ;AAgBH","sourcesContent":["import Button from \"../components/Button\";\r\nimport React,{useState,useEffect} from \"react\";\r\nimport { ScrollView,Text, Linking, StyleSheet } from \"react-native\";\r\nimport {Card} from 'react-native-paper';\r\nimport WorkoutCard from \"./WorkoutCard\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function Macrodetails({route,navigation}){\r\n  const { title, workout } = route.params;\r\n    console.log(`navigation from workout is ${navigation}`)\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    cardbox:{\r\n      margin: 10,\r\n    },\r\n    scrollView: {\r\n      marginHorizontal: 10,\r\n      display: 'flex',\r\n      flex: 1,\r\n      flexWrap: 'wrap',\r\n      flexShrink: 1,\r\n    },\r\n    text: {\r\n      flex: 1,\r\n      flexWrap: 'wrap',\r\n    },\r\n    titleText: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\"\r\n      }\r\n  }); \r\n\r\n  let exercises = workout.results;\r\n  let choices = [];  //going to fill this up with 5 numbers to choose from results workouts to be performed\r\n  let chosen = [];  //workout obj will be stored in here\r\n  for(let i = 0; i < 5; i++ ) {\r\n    let number = Math.floor(Math.random() * exercises.length);\r\n    if(choices.includes(number)) i--; //repeat this loop since the exercise was alrdy chosen\r\n    else {\r\n    choices[i] = number;  //number wasnt yet chosen, add to choices      \r\n    chosen[i] = workout.results[number]\r\n    }\r\n  }\r\n\r\n  console.log(chosen);\r\n\r\n    return(\r\n        <ScrollView style={styles.container}>\r\n            <Text style={styles.text}>\r\n                <ScrollView style={styles.scrollView}>\r\n                    <Text style={styles.titleText}>Workouts for today is: {title}</Text>\r\n                    {chosen.map((item) => {\r\n                        return (\r\n                            <ScrollView style={styles.scrollView} key={item.id}> \r\n                                <WorkoutCard data={item} navigation={navigation} id={item.id}/>\r\n                            </ScrollView>\r\n                        );\r\n                    })}\r\n                </ScrollView>\r\n            </Text>\r\n        </ScrollView>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}