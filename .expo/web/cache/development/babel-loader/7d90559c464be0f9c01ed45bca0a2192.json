{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { ListItem, Avatar, Icon } from 'react-native-elements';\nimport { Button } from 'react-native-elements';\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport NutritionCard from \"./NutritionCard\";\nexport default function ListMeals(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      mealplan = _route$params.mealplan,\n      value = _route$params.value;\n  var today = new Date();\n  var day = today.getDay();\n  var daylist = [\"sunday\", \"monday\", \"tuesday\", \"wednesday \", \"thursday\", \"friday\", \"saturday\"];\n  var tday = daylist[day];\n  var mealplan_now = mealplan.week[tday];\n  var list = [{\n    name: 'Arms'\n  }, {\n    name: 'Legs'\n  }, {\n    name: 'Chest'\n  }, {\n    name: 'Back'\n  }];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      mealexpanded = _useState2[0],\n      setMealexpanded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      workoutexpanded = _useState4[0],\n      setWorkoutexpanded = _useState4[1];\n\n  return React.createElement(View, null, React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, null, React.createElement(ListItem.Title, null, \"Meal-plan for \", tday, \" is...\"))),\n    isExpanded: mealexpanded,\n    onPress: function onPress() {\n      setMealexpanded(!mealexpanded);\n      setWorkoutexpanded(false);\n    }\n  }, mealplan_now.meals.map(function (item) {\n    return React.createElement(ListItem, {\n      key: item.id,\n      bottomDivider: true\n    }, React.createElement(ListItem.Content, null, React.createElement(ListItem.Title, {\n      style: {\n        color: 'blue'\n      },\n      onPress: function onPress() {\n        return Linking.openURL(item.sourceUrl);\n      }\n    }, item.title), React.createElement(ListItem.Subtitle, null, \"Cooking Time:\", item.readyInMinutes, \" minutes\"), React.createElement(ListItem.Subtitle, null, \"Amount of Servings:\", item.servings, \" servings\")), React.createElement(ListItem.Chevron, null));\n  }), React.createElement(NutritionCard, {\n    data: mealplan_now.nutrients\n  })), React.createElement(ListItem.Accordion, {\n    content: React.createElement(React.Fragment, null, React.createElement(ListItem.Content, null, React.createElement(ListItem.Title, null, \"Workout\"))),\n    isExpanded: workoutexpanded,\n    onPress: function onPress() {\n      setWorkoutexpanded(!workoutexpanded);\n      setMealexpanded(false);\n    }\n  }, React.createElement(ListItem, {\n    key: 1,\n    bottomDivider: true\n  }, React.createElement(ListItem.Content, null, React.createElement(ListItem.Title, {\n    style: {\n      color: 'blue'\n    },\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=1,5,13\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Arms',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, \"Arms\")), React.createElement(ListItem.Chevron, null)), React.createElement(ListItem, {\n    key: 2,\n    bottomDivider: true\n  }, React.createElement(ListItem.Content, null, React.createElement(ListItem.Title, {\n    style: {\n      color: 'blue'\n    },\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=7,8,10,11,15\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Legs',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, \"Legs\")), React.createElement(ListItem.Chevron, null))));\n}","map":{"version":3,"sources":["/Users/manav/Documents/study/Fall 2021 Queens College/CSCI 370 /git-repo/screens/ListMeals.js"],"names":["React","useState","ListItem","Avatar","Icon","Button","NutritionCard","ListMeals","route","navigation","params","mealplan","value","today","Date","day","getDay","daylist","tday","mealplan_now","week","list","name","mealexpanded","setMealexpanded","workoutexpanded","setWorkoutexpanded","meals","map","item","id","color","Linking","openURL","sourceUrl","title","readyInMinutes","servings","nutrients","fetch","then","response","json","navigate","workout","catch","error","console"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\nimport { ListItem, Avatar,Icon } from 'react-native-elements'\nimport { Button } from 'react-native-elements';\nimport { View,Linking} from \"react-native\";\nimport NutritionCard from './NutritionCard';\nexport default function ListMeals({route,navigation}){\n    const {mealplan,value} = route.params;\n    var today = new Date();\n      var day = today.getDay();\n      var daylist = [\"sunday\",\"monday\",\"tuesday\",\"wednesday \",\"thursday\",\"friday\",\"saturday\"];\n      var tday = daylist[day];\n      const mealplan_now = mealplan.week[tday];\n    const list = [\n        {\n          name: 'Arms'\n        },\n        {\n            name: 'Legs'\n          },\n          {\n            name: 'Chest'\n          },\n          {\n            name: 'Back'\n          },\n      ];\n    const [mealexpanded,setMealexpanded] = useState(false); \n    const [workoutexpanded,setWorkoutexpanded] = useState(false); \n    return(\n\n        // <Button>Meal-Plan</Button>\n        // <Button>Workout-Plan</Button>\n        <View>\n    <ListItem.Accordion\n  content={\n    <>\n      <ListItem.Content>\n        <ListItem.Title>Meal-plan for {tday} is...</ListItem.Title>\n      </ListItem.Content>\n    </>\n  }\n  isExpanded={mealexpanded}\n  onPress={() => {\n    setMealexpanded(!mealexpanded);\n    setWorkoutexpanded(false);\n  }}\n>\n  {mealplan_now.meals.map((item) => (\n    <ListItem key={item.id}  bottomDivider>\n      <ListItem.Content>\n        <ListItem.Title style={{color: 'blue'}} onPress={() => Linking.openURL(item.sourceUrl)}>{item.title}</ListItem.Title>\n        <ListItem.Subtitle>Cooking Time:{item.readyInMinutes} minutes</ListItem.Subtitle>\n        <ListItem.Subtitle>Amount of Servings:{item.servings} servings</ListItem.Subtitle>  \n      </ListItem.Content>\n      <ListItem.Chevron />\n    </ListItem>\n  ))}\n  <NutritionCard data={mealplan_now.nutrients}/>\n</ListItem.Accordion>\n<ListItem.Accordion\n  content={\n    <>\n      <ListItem.Content>\n        <ListItem.Title>Workout</ListItem.Title>\n      </ListItem.Content>\n    </>\n  }\n  isExpanded={workoutexpanded}\n  onPress={() => {\n    setWorkoutexpanded(!workoutexpanded);\n    setMealexpanded(false);\n  }}\n>\n    <ListItem key={1}  bottomDivider>\n      <ListItem.Content>\n        <ListItem.Title style={{color: 'blue'}} onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=1,5,13`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Arms', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }}>Arms</ListItem.Title>\n      </ListItem.Content>\n      <ListItem.Chevron />\n    </ListItem>\n    <ListItem key={2}  bottomDivider>\n      <ListItem.Content>\n        <ListItem.Title style={{color: 'blue'}} onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=7,8,10,11,15`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Legs', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }}>Legs</ListItem.Title>\n      </ListItem.Content>\n      <ListItem.Chevron />\n    </ListItem>\n</ListItem.Accordion>\n</View> \n);\n}\n\n"]},"metadata":{},"sourceType":"module"}