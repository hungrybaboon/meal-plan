{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Button } from 'react-native-elements';\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function BodyGoals(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      tdee = _route$params.tdee,\n      lose = _route$params.lose,\n      gain = _route$params.gain;\n  console.log(\"navigation from bodygoals is \" + navigation);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      meal_plan = _useState2[0],\n      setMealplan = _useState2[1];\n\n  function getDiet(data) {}\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Lose Weight\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://api.spoonacular.com/mealplanner/generate?timeFrame=week&apiKey=0e5f3b97a15746b4b5d2b2d5ac294240&targetCalories=\" + lose).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('ListMeals', {\n          value: \"\" + lose,\n          mealplan: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Gain Weight\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://api.spoonacular.com/mealplanner/generate?timeFrame=week&apiKey=0e5f3b97a15746b4b5d2b2d5ac294240&targetCalories=\" + gain).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Macrodetails', {\n          value: \"\" + gain,\n          mealplan: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Maintain Weight\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://api.spoonacular.com/mealplanner/generate?timeFrame=week&apiKey=0e5f3b97a15746b4b5d2b2d5ac294240&targetCalories=\" + tdee).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Macrodetails', {\n          value: \"\" + tdee,\n          mealplan: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Arms\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=1,5,13\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Arms',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Legs\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=7,8,10,11,15\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Legs',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Chest\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=4\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Chest',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Back\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=12\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Back',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Shoulder\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=2,9\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Shoulder',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Tri/Chest/Shoulder\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=2,4,5,9\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Tri/Chest/Shoulder',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }), React.createElement(Button, {\n    title: \"Back/Bi\",\n    raised: true,\n    type: \"outline\",\n    onPress: function onPress() {\n      fetch(\"https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=1,12,13\").then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        navigation.navigate('Workout', {\n          title: 'Back/Bi',\n          workout: json\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/manav/Documents/study/Fall 2021 Queens College/CSCI 370 /git-repo/screens/Bodygoals.js"],"names":["Button","React","useState","BodyGoals","route","navigation","params","tdee","lose","gain","console","log","meal_plan","setMealplan","getDiet","data","flex","alignItems","justifyContent","fetch","then","response","json","navigate","value","mealplan","catch","error","title","workout"],"mappings":"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","sourcesContent":["import { Button } from 'react-native-elements';\nimport React,{useState} from \"react\";\nimport { View } from \"react-native\";\n\nexport default function BodyGoals({route,navigation}){\n    const {tdee,lose,gain} = route.params;\n    console.log(`navigation from bodygoals is ${navigation}`)\n    const [meal_plan,setMealplan] = useState();\n    function getDiet(data){\n        \n    }\n    return(\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <Button title='Lose Weight' raised type=\"outline\"onPress={ ()=>{\n                fetch(`https://api.spoonacular.com/mealplanner/generate?timeFrame=week&apiKey=0e5f3b97a15746b4b5d2b2d5ac294240&targetCalories=${lose}`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('ListMeals', {value:`${lose}`,mealplan:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Gain Weight' raised type=\"outline\"onPress={()=>{\n                fetch(`https://api.spoonacular.com/mealplanner/generate?timeFrame=week&apiKey=0e5f3b97a15746b4b5d2b2d5ac294240&targetCalories=${gain}`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Macrodetails',{value: `${gain}`,mealplan:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Maintain Weight' raised type=\"outline\"onPress={()=>{\n                fetch(`https://api.spoonacular.com/mealplanner/generate?timeFrame=week&apiKey=0e5f3b97a15746b4b5d2b2d5ac294240&targetCalories=${tdee}`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Macrodetails',{value: `${tdee}`,mealplan:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Arms' raised type=\"outline\"onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=1,5,13`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Arms', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Legs' raised type=\"outline\"onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=7,8,10,11,15`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Legs', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Chest' raised type=\"outline\"onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=4`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Chest', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Back' raised type=\"outline\"onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=12`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Back', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Shoulder' raised type=\"outline\"onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=2,9`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Shoulder', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Tri/Chest/Shoulder' raised type=\"outline\"onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=2,4,5,9`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Tri/Chest/Shoulder', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n            <Button title='Back/Bi' raised type=\"outline\"onPress={()=>{\n                fetch(`https://wger.de/api/v2/exercise/?language=2&limit=200&muscles=1,12,13`)\n                .then((response) => response.json())\n                .then((json) => {\n                navigation.navigate('Workout',{title: 'Back/Bi', workout:json});\n                })\n                .catch((error) => console.error(error));\n            }} />\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}